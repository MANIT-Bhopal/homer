<?php

/**
 * This is the model base class for the table "inv_metric_unit_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InvMetricUnitInfo".
 *
 * Columns in table "inv_metric_unit_info" available as properties of the model,
 * followed by relations of table "inv_metric_unit_info" available as properties of the model.
 *
 * @property integer $unit_id
 * @property string $unit_code
 * @property string $unit_label
 *
 * @property InvItemInfo[] $invItemInfos
 * @property MenuCardInfo[] $menuCardInfos
 */
abstract class BaseInvMetricUnitInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inv_metric_unit_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InvMetricUnitInfo|InvMetricUnitInfos', $n);
	}

	public static function representingColumn() {
		return 'unit_code';
	}

	public function rules() {
		return array(
			array('unit_code, unit_label', 'required'),
			array('unit_code', 'length', 'max'=>5),
			array('unit_label', 'length', 'max'=>20),
			array('unit_id, unit_code, unit_label', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'invItemInfos' => array(self::HAS_MANY, 'InvItemInfo', 'unit_code'),
			'menuCardInfos' => array(self::HAS_MANY, 'MenuCardInfo', 'unit_code'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'unit_id' => Yii::t('app', 'Unit'),
			'unit_code' => Yii::t('app', 'Unit Code'),
			'unit_label' => Yii::t('app', 'Unit Label'),
			'invItemInfos' => null,
			'menuCardInfos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('unit_id', $this->unit_id);
		$criteria->compare('unit_code', $this->unit_code, true);
		$criteria->compare('unit_label', $this->unit_label, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}