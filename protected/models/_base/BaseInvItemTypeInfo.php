<?php

/**
 * This is the model base class for the table "inv_item_type_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InvItemTypeInfo".
 *
 * Columns in table "inv_item_type_info" available as properties of the model,
 * followed by relations of table "inv_item_type_info" available as properties of the model.
 *
 * @property integer $item_type_id
 * @property string $item_type_name
 * @property string $ingredient
 *
 * @property InvItemInfo[] $invItemInfos
 */
abstract class BaseInvItemTypeInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inv_item_type_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InvItemTypeInfo|InvItemTypeInfos', $n);
	}

	public static function representingColumn() {
		return 'item_type_name';
	}

	public function rules() {
		return array(
			array('item_type_name', 'required'),
			array('item_type_name', 'length', 'max'=>20),
			array('ingredient', 'length', 'max'=>1),
			array('ingredient', 'default', 'setOnEmpty' => true, 'value' => null),
			array('item_type_id, item_type_name, ingredient', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'invItemInfos' => array(self::HAS_MANY, 'InvItemInfo', 'item_type_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'item_type_id' => Yii::t('app', 'Item Type'),
			'item_type_name' => Yii::t('app', 'Item Type Name'),
			'ingredient' => Yii::t('app', 'Ingredient'),
			'invItemInfos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('item_type_id', $this->item_type_id);
		$criteria->compare('item_type_name', $this->item_type_name, true);
		$criteria->compare('ingredient', $this->ingredient, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}