<?php

/**
 * This is the model base class for the table "inv_goods_request".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InvGoodsRequest".
 *
 * Columns in table "inv_goods_request" available as properties of the model,
 * followed by relations of table "inv_goods_request" available as properties of the model.
 *
 * @property integer $request_id
 * @property string $request_date
 * @property string $due_date
 * @property integer $dept_id
 * @property integer $item_id
 *
 * @property InvGoodsIssueOrder[] $invGoodsIssueOrders
 * @property InvItemInfo $item
 * @property InfraDeptInfo $dept
 */
abstract class BaseInvGoodsRequest extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'inv_goods_request';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InvGoodsRequest|InvGoodsRequests', $n);
	}

	public static function representingColumn() {
		return 'request_date';
	}

	public function rules() {
		return array(
			array('request_date, due_date, dept_id, item_id', 'required'),
			array('dept_id, item_id', 'numerical', 'integerOnly'=>true),
			array('request_id, request_date, due_date, dept_id, item_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'invGoodsIssueOrders' => array(self::HAS_MANY, 'InvGoodsIssueOrder', 'request_id'),
			'item' => array(self::BELONGS_TO, 'InvItemInfo', 'item_id'),
			'dept' => array(self::BELONGS_TO, 'InfraDeptInfo', 'dept_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'request_id' => Yii::t('app', 'Request'),
			'request_date' => Yii::t('app', 'Request Date'),
			'due_date' => Yii::t('app', 'Due Date'),
			'dept_id' => null,
			'item_id' => null,
			'invGoodsIssueOrders' => null,
			'item' => null,
			'dept' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('request_id', $this->request_id);
		$criteria->compare('request_date', $this->request_date, true);
		$criteria->compare('due_date', $this->due_date, true);
		$criteria->compare('dept_id', $this->dept_id);
		$criteria->compare('item_id', $this->item_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}