<?php

/**
 * This is the model base class for the table "menu_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MenuInfo".
 *
 * Columns in table "menu_info" available as properties of the model,
 * followed by relations of table "menu_info" available as properties of the model.
 *
 * @property integer $menu_info_id
 * @property string $menu_name
 * @property integer $category_id
 *
 * @property MenuCardInfo[] $menuCardInfos
 * @property MenuCategoryInfo $category
 */
abstract class BaseMenuInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'menu_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MenuInfo|MenuInfos', $n);
	}

	public static function representingColumn() {
		return 'menu_name';
	}

	public function rules() {
		return array(
			array('menu_name, category_id', 'required'),
			array('category_id', 'numerical', 'integerOnly'=>true),
			array('menu_name', 'length', 'max'=>100),
			array('menu_info_id, menu_name, category_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'menuCardInfos' => array(self::MANY_MANY, 'MenuCardInfo', 'menu_card_menu_info(menu_info_id, menu_card_id)'),
			'category' => array(self::BELONGS_TO, 'MenuCategoryInfo', 'category_id'),
		);
	}

	public function pivotModels() {
		return array(
			'menuCardInfos' => 'MenuCardMenuInfo',
		);
	}

	public function attributeLabels() {
		return array(
			'menu_info_id' => Yii::t('app', 'Menu Info'),
			'menu_name' => Yii::t('app', 'Menu Name'),
			'category_id' => null,
			'menuCardInfos' => null,
			'category' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('menu_info_id', $this->menu_info_id);
		$criteria->compare('menu_name', $this->menu_name, true);
		$criteria->compare('category_id', $this->category_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}