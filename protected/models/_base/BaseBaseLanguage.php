<?php

/**
 * This is the model base class for the table "base_language".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "BaseLanguage".
 *
 * Columns in table "base_language" available as properties of the model,
 * followed by relations of table "base_language" available as properties of the model.
 *
 * @property integer $language_id
 * @property string $lang_code
 * @property string $locale_id
 * @property string $lang_label
 *
 * @property Country[] $countries
 */
abstract class BaseBaseLanguage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'base_language';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Base Language|Base Languages', $n);
	}

	public static function representingColumn() {
		return 'lang_code';
	}

	public function rules() {
		return array(
			array('lang_code, lang_label', 'required'),
			array('lang_code', 'length', 'max'=>2),
			array('locale_id, lang_label', 'length', 'max'=>255),
			array('locale_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('language_id, lang_code, locale_id, lang_label', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'countries' => array(self::HAS_MANY, 'Country', 'lang_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'language_id' => Yii::t('app', 'Language'),
			'lang_code' => Yii::t('app', 'Lang Code'),
			'locale_id' => Yii::t('app', 'Locale'),
			'lang_label' => Yii::t('app', 'Lang Label'),
			'countries' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('language_id', $this->language_id);
		$criteria->compare('lang_code', $this->lang_code, true);
		$criteria->compare('locale_id', $this->locale_id, true);
		$criteria->compare('lang_label', $this->lang_label, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}